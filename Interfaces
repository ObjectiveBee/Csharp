// Интерфейсы //
// это полностью абстрактный класс, содержащий только абстрактные члены
// объявляется с помощью ключевого слова interface
public interface IShape
{
	void Draw();
}
// Все члены интерфейса являются абстрактными по умолчанию,
// так что нет необходимости использовать abstract

// Все члены интерфейса всегда являются публичными, никакие модификаторы доступа не могут быть к ним применены.
// Принято использовать заглавную букву I в качестве первой буквы имени интерфейса.

// Интерфейсы могут сдержать: свойства, методы и т.д
// НЕ МОГУТ содержать поля

// Интерфейс просто описывает, что должен делать класс.
// Класс реализующий интерфейс должен определить, как будет выполняться поведение.
public interface IShape
{
	void Draw();
}
class Circle : IShape
{
	public void Draw()
	{
		Console.WriteLine("Circle Draw");
	}
}
static void Main(string[] args)
{
	IShape c = new Circle();
	c.Draw();
	// Outputs "Circle Draw"
}
// ключевое слово override не нужно при реализации интерфейса

// Отличия от абстрактных классов:
- Класс может наследоваться только от одного базового класса, но может реализовать множество интерфейсов
class A : IShape, IAnimal, и т.д.
